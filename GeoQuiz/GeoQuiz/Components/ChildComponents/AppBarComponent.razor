@inject NavigationManager navigation

<MudAppBar Fixed=true
           Elevation="1"
           Style="background-color: #F5F8FC; color: #2C2C2E ; height: 64px;">

    <!-- Left section: logo + title + tabs -->
    <MudContainer MaxWidth="MaxWidth.Large"
                  Class="d-flex align-center"
                  Style="height: 100%; padding-left: 250px;">

        <img src="QuizImages/appbaricon.png"
             alt="Quizaph Logo"
             width="36" height="36"
             style="margin-right: 10px;" />


        <MudText Class="quizaph-gradient"
                 Style="font-size: 28px; font-weight: 500; margin-right: 20px; font-family: 'Roboto Condensed';">
            Quizaph
        </MudText>

        <MudTabs MinimumTabWidth="80px"
                 ActivePanelIndexChanged="PanelChanged"
                 ActivePanelIndex="@selectedTab"
                 Style="margin-left: 30px;">
            <MudTabPanel Text="Discover"
                         Style="font-size: 14px; background-color: #f1f8fa; text-transform: none;" />
            <MudTabPanel Visible="false" />
            <MudTabPanel Text="Quizes"
                         Style="font-size: 14px; background-color: #f1f8fa; text-transform: none;" />
            <MudTabPanel Text="About"
                         Style="font-size: 14px; background-color: #f1f8fa; text-transform: none;" />
        </MudTabs>

    </MudContainer>
    <!-- Right section: login/signup or profile -->
    @if (!IsLoggedIn)
    {
        <MudContainer MaxWidth="MaxWidth.Large"
                      Class="d-flex align-center"
                      Style="height: 100%; padding-right: 250px; justify-content: right;">
            <MudButton Style="font-size: 14px; text-transform: none; margin-right: 5px;"
                       DropShadow="false"
                       Variant="Variant.Text"
                       OnClick="@SignIn">
                Login
            </MudButton>
            <MudButton Style="background-color: black; text-transform: none; border-radius: 20px; color: #ebebeb; font-size: 14px;"
                       OnClick="@SignUp"
                       Variant="Variant.Filled">
                Sign Up
            </MudButton>
        </MudContainer>
    }
    else
    {
        <MudContainer MaxWidth="MaxWidth.Large"
                      Class="d-flex align-center"
                      Style="height: 100%; padding-right: 300px; justify-content: right;">
            <MudMenu Label="Profile" Variant="Variant.Text"
                     EndIcon="@Icons.Material.Filled.KeyboardArrowDown"
                     Style="color: #ebebeb;" Color="Color.Inherit" Size="Size.Small" Dense>
                <MudMenuItem Icon="@Icons.Material.Filled.Person" Label="Edit profile" IconColor="Color.Tertiary" />
                <MudMenuItem Icon="@(isDarkMode? Icons.Material.Filled.DarkMode : Icons.Material.Filled.WbSunny)" Label="Toggle Darkmode" IconColor="Color.Warning" />
                <MudMenuItem Icon="@Icons.Material.Filled.Logout" Label="Logout" IconColor="Color.Dark" OnClick="@Logout" />
            </MudMenu>
        </MudContainer>
    }
</MudAppBar>

<style>
    .quizaph-gradient {
        background: linear-gradient(90deg, purple, #455ADE, cyan);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text; /* fallback */
        color: transparent; /* ensures gradient shows */
    }
</style>

@code {
    public bool isDarkMode = true;
    private bool IsLoggedIn = false;
    private string appBarColor = "#302A2A";
    private int selectedTab = 1; // Dummy tab with no content


    private void Logout()
    {
        IsLoggedIn = false;
    }

    private void SignIn()
    {
        navigation.NavigateTo("Login");
    }

    private void SignUp()
    {
        navigation.NavigateTo("SignUp");
    }

    private void PanelChanged(int index)
    {
        selectedTab = index;
        var route = index switch
        {
            0 => "/",
            1 => "/Discover",
            2 => "/Quizes",
            3 => "/About",
            _ => "/"
        };
        navigation.NavigateTo(route);
    }
}
