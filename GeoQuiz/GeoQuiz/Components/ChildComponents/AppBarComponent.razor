@inject NavigationManager navigation

<MudAppBar Fixed="true" Elevation="1"
           Style="background-color: #F5F8FC; color: #2C2C2E; height: 64px;">
    <MudContainer MaxWidth="MaxWidth.Large"
                  Class="d-flex justify-space-between align-center"
                  Style="height: 100%; padding: 0 16px;">

        <!-- Left side -->
        <div class="d-flex align-center">
            <img src="QuizImages/appbaricon.png" alt="Quizaph Logo" width="36" height="36" class="mr-2" />

            <MudText Class="quizaph-gradient"
                     Style="font-size: 24px; font-weight: 500; font-family: 'Roboto Condensed'; margin-right: 20px;">
                Quizaph
            </MudText>

            <!-- Desktop "Tabs" -->
            <MudHidden Breakpoint="Breakpoint.SmAndDown">
                <div class="d-flex ml-4">
                    @foreach (var tab in tabs)
                    {
                        <MudButton Variant="Variant.Text"
                                   Class="@(currentRoute == tab.Route ? "nav-tab nav-tab-active" : "nav-tab")"
                                   OnClick="@(() => Navigate(tab.Route))" style="margin-left: 8px; margin-right: 8px; border-radius: 0px; font-weight: 350;">

                            @tab.Label
                        </MudButton>
                    }
                </div>
            </MudHidden>
            
            <MudHidden Breakpoint="Breakpoint.MdAndUp">
                <MudMenu Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" AnchorOrigin="Origin.TopLeft" TransformOrigin="Origin.TopLeft">
                    @foreach (var tab in tabs)
                    {
                        <MudMenuItem OnClick="@(() => Navigate(tab.Route))">
                            @tab.Label
                        </MudMenuItem>
                    }
                </MudMenu>
            </MudHidden>
        </div>

        <!-- Right side -->
        <div class="d-flex align-center">
            @if (!isLoggedIn)
            {
                <MudHidden Breakpoint="Breakpoint.SmAndDown">
                    <MudButton Variant="Variant.Text" OnClick="@SignIn">Login</MudButton>
                    <MudButton OnClick="@SignUp" Variant="Variant.Filled"
                               Style="background-color: black; border-radius: 20px; color: #ebebeb;">
                        Sign Up
                    </MudButton>
                </MudHidden>
            }
            else
            {
                <MudMenu Label="Profile" Variant="Variant.Text"
                         EndIcon="@Icons.Material.Filled.KeyboardArrowDown"
                         StartIcon="@Icons.Material.Filled.Person"
                         Color="Color.Inherit" Dense Class="profile-menu">
                    <MudMenuItem Icon="@Icons.Material.Filled.Person" Label="Edit profile" />
                    <MudMenuItem Icon="@Icons.Material.Filled.Logout" Label="Logout" OnClick="Logout" />
                    <MudMenuItem Icon="@((isDarkMode) ? Icons.Material.Filled.WbSunny : Icons.Material.Filled.NightsStay)"
                                 Label="Dark Mode" OnClick="ToggleDarkMode" />
                </MudMenu>
            }
        </div>
    </MudContainer>
</MudAppBar>

<style>
    .quizaph-gradient {
        background: linear-gradient(90deg, blue, #455ADE, cyan);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        color: transparent;
    }

    .profile-menu .mud-button-label {
        font-weight: 350;
    }
    .nav-tab {
        display: flex;
        align-items: center;
        justify-content: center;
        text-transform: none;
        font-size: 14px;
        min-width: 80px;
        color: #2C2C2E;
        border-bottom: 2px solid transparent;
        padding: 6px 12px;
    }

    .nav-tab-active {
        font-weight: 600;
        border-bottom: 2px solid #455ADE;
        color: #455ADE !important;
    }
</style>

@code {
    private bool isLoggedIn = true;
    private bool isDarkMode = false;
    private string currentRoute;


    private List<(string Label, string Route)> tabs = new()
    {
        ("Discover", "/"),
        ("Quizzes", "/Quizzes"),
        ("About", "/About")
    };

    protected override void OnInitialized()
    {
        currentRoute = navigation.Uri.Replace(navigation.BaseUri, "/");
    }

    private void Navigate(string route)
    {
        currentRoute = route;
        navigation.NavigateTo(route);
    }

    private void Logout()
    {
        // your logout logic
    }

    private void ToggleDarkMode()
    {
        isDarkMode = !isDarkMode;
    }

    private void SignIn()
    {
        navigation.NavigateTo("Login");
    }

    private void SignUp()
    {
        navigation.NavigateTo("SignUp");
    }
}
